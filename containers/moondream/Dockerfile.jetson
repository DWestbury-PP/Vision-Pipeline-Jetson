# Jetson Moondream VLM service with CUDA GPU acceleration
FROM nvcr.io/nvidia/l4t-pytorch:r35.2.1-pth2.0-py3

# Prevent interactive prompts during build
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=UTC

# Set working directory
WORKDIR /app

# Install essential system dependencies (minimal set for network resilience)
RUN apt-get update && apt-get install -y --fix-missing \
    libffi7 \
    || (apt-get update --fix-missing && apt-get install -y libffi7) \
    && rm -rf /var/lib/apt/lists/* || true

# Create libffi.so.8 symlink to fix OpenCV compatibility
RUN ln -sf /usr/lib/aarch64-linux-gnu/libffi.so.7 /usr/lib/aarch64-linux-gnu/libffi.so.8 || true

# Create non-root user
RUN useradd -m -u 1000 appuser && \
    chown -R appuser:appuser /app && \
    mkdir -p /home/appuser/.cache/huggingface && \
    chown -R appuser:appuser /home/appuser/.cache

# L4T containers come with optimized OpenCV pre-installed

# Upgrade pip and clear any cache issues
RUN pip3 install --upgrade pip setuptools wheel

# Copy requirements and install Python dependencies
COPY containers/requirements-l4t-minimal.txt .
RUN pip3 install --no-cache-dir --timeout 300 --retries 3 -r requirements-l4t-minimal.txt

# Skip transformers for now due to dependency issues - will install at runtime if needed  
# RUN pip3 install --no-cache-dir --timeout 300 --retries 3 --only-binary=all --force-reinstall transformers==4.21.0

# Copy application code
COPY services/ ./services/
COPY scripts/ ./scripts/
COPY env.example .env

# Create models directory and set up HuggingFace cache (models will be bind-mounted at runtime)
RUN mkdir -p /app/models/moondream && \
    chown -R appuser:appuser /app

# Switch to non-root user
USER appuser

# Set HuggingFace cache directory
ENV HF_HOME=/home/appuser/.cache/huggingface
ENV TRANSFORMERS_CACHE=/home/appuser/.cache/huggingface

# Expose any necessary ports (none for Moondream service)

# Run the Moondream service (OpenCV patch as fallback if needed)
CMD ["python3", "services/native/moondream_native.py"]
